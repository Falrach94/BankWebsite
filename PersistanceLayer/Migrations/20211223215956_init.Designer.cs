// <auto-generated />
using System;
using AggregateDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace PersistanceLayer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211223215956_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("BankAccountDomainModel.Modules.Grouping.Data_Objects.Entities.TransactionClassifier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Extractor")
                        .HasColumnType("longtext");

                    b.Property<string>("FeatureSelection")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("GroupingProfileId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateTimestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("GroupingProfileId")
                        .IsUnique();

                    b.ToTable("Classifier");
                });

            modelBuilder.Entity("BankAccountDomainModel.Modules.Transactions.TransactionsProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("TransactionsProfile");
                });

            modelBuilder.Entity("BankAccountLib.Data_Objects.Entities.GroupingProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("GroupingProfileId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("GroupingProfileId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("GroupingProfile");
                });

            modelBuilder.Entity("BankAccountLib.TransactionGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("GroupingProfileId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GroupingProfileId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("WebBackend.Account_Domain_Model.Data_Objects.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BankAccountDomainModel.Modules.Grouping.Data_Objects.Entities.TransactionClassifier", b =>
                {
                    b.HasOne("BankAccountLib.Data_Objects.Entities.GroupingProfile", null)
                        .WithOne("_classifier")
                        .HasForeignKey("BankAccountDomainModel.Modules.Grouping.Data_Objects.Entities.TransactionClassifier", "GroupingProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("BankAccountLib.Classification.Data.TrainingSample", "TrainingSamples", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<Guid>("ClassifierId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Features")
                                .HasColumnType("longtext");

                            b1.Property<Guid?>("GroupId")
                                .HasColumnType("char(36)");

                            b1.HasKey("Id");

                            b1.HasIndex("ClassifierId");

                            b1.HasIndex("GroupId");

                            b1.ToTable("ClassifierExample");

                            b1.WithOwner()
                                .HasForeignKey("ClassifierId");

                            b1.HasOne("BankAccountLib.TransactionGroup", "Class")
                                .WithMany()
                                .HasForeignKey("GroupId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.Navigation("Class");
                        });

                    b.Navigation("TrainingSamples");
                });

            modelBuilder.Entity("BankAccountDomainModel.Modules.Transactions.TransactionsProfile", b =>
                {
                    b.HasOne("WebBackend.Account_Domain_Model.Data_Objects.User", null)
                        .WithOne()
                        .HasForeignKey("BankAccountDomainModel.Modules.Transactions.TransactionsProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("BankAccountLib.Transactions.Filter.ClassifiedTransaction", "_transactions", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("char(36)");

                            b1.Property<Guid?>("GroupId")
                                .HasColumnType("char(36)");

                            b1.Property<Guid>("TransactionsProfileId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("_classificationTimestamp")
                                .HasColumnType("datetime(6)")
                                .HasColumnName("Timestamp");

                            b1.HasKey("Id");

                            b1.HasIndex("GroupId");

                            b1.HasIndex("TransactionsProfileId");

                            b1.ToTable("UserTransaction");

                            b1.HasOne("BankAccountLib.TransactionGroup", "_group")
                                .WithMany()
                                .HasForeignKey("GroupId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.WithOwner()
                                .HasForeignKey("TransactionsProfileId");

                            b1.OwnsOne("BankAccountLib.TransactionData", "Data", b2 =>
                                {
                                    b2.Property<Guid>("ClassifiedTransactionId")
                                        .HasColumnType("char(36)");

                                    b2.Property<string>("AccountNumber")
                                        .HasColumnType("longtext");

                                    b2.Property<double>("Amount")
                                        .HasColumnType("double");

                                    b2.Property<string>("BankCode")
                                        .HasColumnType("longtext");

                                    b2.Property<DateTime>("BookingDate")
                                        .HasColumnType("datetime(6)");

                                    b2.Property<string>("BookingDescription")
                                        .HasColumnType("longtext");

                                    b2.Property<string>("Currency")
                                        .HasColumnType("longtext");

                                    b2.Property<string>("Info")
                                        .HasColumnType("longtext");

                                    b2.Property<string>("OrderAccount")
                                        .HasColumnType("longtext");

                                    b2.Property<string>("Purpose")
                                        .HasColumnType("longtext");

                                    b2.Property<string>("Target")
                                        .HasColumnType("longtext");

                                    b2.Property<DateTime>("ValueDate")
                                        .HasColumnType("datetime(6)");

                                    b2.HasKey("ClassifiedTransactionId");

                                    b2.ToTable("UserTransaction");

                                    b2.WithOwner()
                                        .HasForeignKey("ClassifiedTransactionId");
                                });

                            b1.Navigation("_group");

                            b1.Navigation("Data");
                        });

                    b.Navigation("_transactions");
                });

            modelBuilder.Entity("BankAccountLib.Data_Objects.Entities.GroupingProfile", b =>
                {
                    b.HasOne("BankAccountDomainModel.Modules.Transactions.TransactionsProfile", null)
                        .WithOne("_groupingProfile")
                        .HasForeignKey("BankAccountLib.Data_Objects.Entities.GroupingProfile", "GroupingProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebBackend.Account_Domain_Model.Data_Objects.User", null)
                        .WithOne()
                        .HasForeignKey("BankAccountLib.Data_Objects.Entities.GroupingProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BankAccountLib.TransactionGroup", b =>
                {
                    b.HasOne("BankAccountLib.Data_Objects.Entities.GroupingProfile", null)
                        .WithMany("_groups")
                        .HasForeignKey("GroupingProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("BankAccountLib.TransactionData", "ExampleTransactions", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("AccountNumber")
                                .HasColumnType("longtext");

                            b1.Property<double>("Amount")
                                .HasColumnType("double");

                            b1.Property<string>("BankCode")
                                .HasColumnType("longtext");

                            b1.Property<DateTime>("BookingDate")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("BookingDescription")
                                .HasColumnType("longtext");

                            b1.Property<string>("Currency")
                                .HasColumnType("longtext");

                            b1.Property<string>("Info")
                                .HasColumnType("longtext");

                            b1.Property<string>("OrderAccount")
                                .HasColumnType("longtext");

                            b1.Property<string>("Purpose")
                                .HasColumnType("longtext");

                            b1.Property<string>("Target")
                                .HasColumnType("longtext");

                            b1.Property<Guid>("TransactionGroupId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime>("ValueDate")
                                .HasColumnType("datetime(6)");

                            b1.HasKey("Id");

                            b1.HasIndex("TransactionGroupId");

                            b1.ToTable("GroupExample");

                            b1.WithOwner()
                                .HasForeignKey("TransactionGroupId");
                        });

                    b.Navigation("ExampleTransactions");
                });

            modelBuilder.Entity("BankAccountDomainModel.Modules.Transactions.TransactionsProfile", b =>
                {
                    b.Navigation("_groupingProfile");
                });

            modelBuilder.Entity("BankAccountLib.Data_Objects.Entities.GroupingProfile", b =>
                {
                    b.Navigation("_classifier");

                    b.Navigation("_groups");
                });
#pragma warning restore 612, 618
        }
    }
}
