// <auto-generated />
using System;
using AggregateDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AggregateDatabase.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("PropertyAccessMode", PropertyAccessMode.Field)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BankAccountDomainModel.Modules.Grouping.Data_Objects.Entities.TransactionClassifier", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Extractor")
                        .HasColumnType("text");

                    b.Property<string>("FeatureSelection")
                        .HasColumnType("text");

                    b.Property<byte[]>("GroupingProfileId")
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("UpdateTimestamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("GroupingProfileId")
                        .IsUnique();

                    b.ToTable("Classifier");
                });

            modelBuilder.Entity("BankAccountDomainModel.Modules.Transactions.TransactionsProfile", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("UserId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("TransactionsProfile");
                });

            modelBuilder.Entity("BankAccountLib.Data_Objects.Entities.GroupingProfile", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("GroupingProfileId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("UserId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("GroupingProfileId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("GroupingProfile");
                });

            modelBuilder.Entity("BankAccountLib.TransactionGroup", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("GroupingProfileId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupingProfileId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("WebBackend.Account_Domain_Model.Data_Objects.User", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BankAccountDomainModel.Modules.Grouping.Data_Objects.Entities.TransactionClassifier", b =>
                {
                    b.HasOne("BankAccountLib.Data_Objects.Entities.GroupingProfile", null)
                        .WithOne("_classifier")
                        .HasForeignKey("BankAccountDomainModel.Modules.Grouping.Data_Objects.Entities.TransactionClassifier", "GroupingProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("BankAccountLib.Classification.Data.TrainingSample", "TrainingSamples", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<byte[]>("ClassifierId")
                                .IsRequired()
                                .HasColumnType("varbinary(16)");

                            b1.Property<string>("Features")
                                .HasColumnType("text");

                            b1.Property<byte[]>("GroupId")
                                .HasColumnType("varbinary(16)");

                            b1.HasKey("Id");

                            b1.HasIndex("ClassifierId");

                            b1.HasIndex("GroupId");

                            b1.ToTable("ClassifierExample");

                            b1.WithOwner()
                                .HasForeignKey("ClassifierId");

                            b1.HasOne("BankAccountLib.TransactionGroup", "Class")
                                .WithMany()
                                .HasForeignKey("GroupId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("BankAccountDomainModel.Modules.Transactions.TransactionsProfile", b =>
                {
                    b.HasOne("WebBackend.Account_Domain_Model.Data_Objects.User", null)
                        .WithOne()
                        .HasForeignKey("BankAccountDomainModel.Modules.Transactions.TransactionsProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("BankAccountLib.Transactions.Filter.ClassifiedTransaction", "_transactions", b1 =>
                        {
                            b1.Property<byte[]>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("varbinary(16)");

                            b1.Property<byte[]>("GroupId")
                                .HasColumnType("varbinary(16)");

                            b1.Property<byte[]>("TransactionsProfileId")
                                .IsRequired()
                                .HasColumnType("varbinary(16)");

                            b1.Property<DateTime>("_classificationTimestamp")
                                .HasColumnName("Timestamp")
                                .HasColumnType("datetime");

                            b1.HasKey("Id");

                            b1.HasIndex("GroupId");

                            b1.HasIndex("TransactionsProfileId");

                            b1.ToTable("UserTransaction");

                            b1.HasOne("BankAccountLib.TransactionGroup", "_group")
                                .WithMany()
                                .HasForeignKey("GroupId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.WithOwner()
                                .HasForeignKey("TransactionsProfileId");

                            b1.OwnsOne("BankAccountLib.TransactionData", "Data", b2 =>
                                {
                                    b2.Property<byte[]>("ClassifiedTransactionId")
                                        .HasColumnType("varbinary(16)");

                                    b2.Property<string>("AccountNumber")
                                        .HasColumnType("text");

                                    b2.Property<double>("Amount")
                                        .HasColumnType("double");

                                    b2.Property<string>("BankCode")
                                        .HasColumnType("text");

                                    b2.Property<DateTime>("BookingDate")
                                        .HasColumnType("datetime");

                                    b2.Property<string>("BookingDescription")
                                        .HasColumnType("text");

                                    b2.Property<string>("Currency")
                                        .HasColumnType("text");

                                    b2.Property<string>("Info")
                                        .HasColumnType("text");

                                    b2.Property<string>("OrderAccount")
                                        .HasColumnType("text");

                                    b2.Property<string>("Purpose")
                                        .HasColumnType("text");

                                    b2.Property<string>("Target")
                                        .HasColumnType("text");

                                    b2.Property<DateTime>("ValueDate")
                                        .HasColumnType("datetime");

                                    b2.HasKey("ClassifiedTransactionId");

                                    b2.ToTable("UserTransaction");

                                    b2.WithOwner()
                                        .HasForeignKey("ClassifiedTransactionId");
                                });
                        });
                });

            modelBuilder.Entity("BankAccountLib.Data_Objects.Entities.GroupingProfile", b =>
                {
                    b.HasOne("BankAccountDomainModel.Modules.Transactions.TransactionsProfile", null)
                        .WithOne("_groupingProfile")
                        .HasForeignKey("BankAccountLib.Data_Objects.Entities.GroupingProfile", "GroupingProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebBackend.Account_Domain_Model.Data_Objects.User", null)
                        .WithOne()
                        .HasForeignKey("BankAccountLib.Data_Objects.Entities.GroupingProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BankAccountLib.TransactionGroup", b =>
                {
                    b.HasOne("BankAccountLib.Data_Objects.Entities.GroupingProfile", null)
                        .WithMany("_groups")
                        .HasForeignKey("GroupingProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("BankAccountLib.TransactionData", "ExampleTransactions", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("AccountNumber")
                                .HasColumnType("text");

                            b1.Property<double>("Amount")
                                .HasColumnType("double");

                            b1.Property<string>("BankCode")
                                .HasColumnType("text");

                            b1.Property<DateTime>("BookingDate")
                                .HasColumnType("datetime");

                            b1.Property<string>("BookingDescription")
                                .HasColumnType("text");

                            b1.Property<string>("Currency")
                                .HasColumnType("text");

                            b1.Property<string>("Info")
                                .HasColumnType("text");

                            b1.Property<string>("OrderAccount")
                                .HasColumnType("text");

                            b1.Property<string>("Purpose")
                                .HasColumnType("text");

                            b1.Property<string>("Target")
                                .HasColumnType("text");

                            b1.Property<byte[]>("TransactionGroupId")
                                .IsRequired()
                                .HasColumnType("varbinary(16)");

                            b1.Property<DateTime>("ValueDate")
                                .HasColumnType("datetime");

                            b1.HasKey("Id");

                            b1.HasIndex("TransactionGroupId");

                            b1.ToTable("GroupExample");

                            b1.WithOwner()
                                .HasForeignKey("TransactionGroupId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
