{"version":3,"sources":["./src/app/components/customs/group/group.component.ts","./src/app/components/customs/group/group.component.html","./src/app/store/account/account.actions.ts","./src/app/services/transactions/transactions.service.ts","./src/app/store/account/account.reducer.ts","./src/environments/environment.ts","./src/app/store/groups/groups.reducer.ts","./src/app/components/dialogs/new-group/new-group.component.ts","./src/app/components/dialogs/new-group/new-group.component.html","./src/app/store/groups/groups.selectors.ts","./src/app/components/pages/home/summary/summary.component.ts","./src/app/components/pages/home/summary/summary.component.html","./src/app/services/account/account.service.ts","./src/app/store/transactions/transactions.seletors.ts","./src/app/routing/guards/loginGuard.ts","./src/app/components/pages/home/group-title/group-title.component.ts","./src/app/components/pages/home/group-title/group-title.component.html","./src/app/components/customs/group-container/group-container.component.ts","./src/app/components/customs/group-container/group-container.component.html","./src/app/store/account/account.effects.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/pages/upload/upload.component.ts","./src/app/components/pages/upload/upload.component.html","./src/app/routing/app-routing.module.ts","./src/app/store/index.ts","./src/app/components/pages/home/group-selector/group-selector.component.ts","./src/app/components/pages/home/group-selector/group-selector.component.html","./src/app/app.module.ts","./src/app/store/account/account.selectors.ts","./src/app/store/groups/groups.effects.ts","./src/app/components/customs/upload/upload.component.ts","./src/app/components/customs/upload/upload.component.html","./src/app/store/transactions/transactions.actions.ts","./src/app/store/groups/groups.actions.ts","./src/app/components/pages/home/small-group/small-group.component.ts","./src/app/components/pages/home/small-group/small-group.component.html","./src/app/components/customs/transaction/transaction.component.ts","./src/app/components/customs/transaction/transaction.component.html","./src/app/store/transactions/transactions.reducer.ts","./src/app/components/dialogs/color-dialog/color-dialog.component.ts","./src/app/components/dialogs/color-dialog/color-dialog.component.html","./src/app/pipes/string-replacement.pipe.ts","./src/app/services/ping/ping.service.ts","./src/app/components/pages/login/login.component.ts","./src/app/components/pages/login/login.component.html","./src/app/components/pages/home/home.component.ts","./src/app/components/pages/home/home.component.html","./src/app/services/groups/groups.service.ts","./src/app/components/pages/groups/groups.component.ts","./src/app/components/pages/groups/groups.component.html","./src/main.ts","./src/app/store/transactions/transactions.effects.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Store } from '@ngrx/store';\r\nimport { IGroup } from 'src/app/model/group';\r\nimport { GroupsService } from 'src/app/services/groups/groups.service';\r\nimport { AppState } from 'src/app/store';\r\nimport { GroupActions } from 'src/app/store/groups/groups.actions';\r\nimport { GroupReducer } from 'src/app/store/groups/groups.reducer';\r\nimport { ColorDialogComponent } from '../../dialogs/color-dialog/color-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-group',\r\n  templateUrl: './group.component.html',\r\n  styleUrls: ['./group.component.css']\r\n})\r\nexport class GroupComponent implements OnInit {\r\n\r\n  @Input()group!:IGroup;\r\n  labelVisible:boolean = true;\r\n\r\n\r\n  constructor(private _store: Store<AppState>,\r\n              private _dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClickRemove(){\r\n    this._store.dispatch(GroupActions.remove({group:this.group}))\r\n    //this._groupsService.removeGroup(this.group).subscribe();\r\n  }\r\n  onChangeName(name:string){\r\n    this.group.name=name;\r\n    //this._groupsService.saveGroup(this.group).subscribe();\r\n  }\r\n\r\n  onClickPickColor(){\r\n    this._dialog.open(ColorDialogComponent).afterClosed().subscribe(res => {      \r\n       \r\n    })\r\n  }\r\n\r\n}\r\n","<mat-card  backcolor=\"red\"  class=\"group-container-element\" (mouseleave)=\"this.labelVisible = true\">\r\n    <mat-card-title >\r\n        <div [class.hide]=\"!this.labelVisible\" (click)=\"this.labelVisible=false; name.focus()\" #labelDiv>{{group?.name}}</div>\r\n        <div [class.hide]=\"this.labelVisible\">\r\n            <mat-form-field appearance=\"standard\" #fieldDiv>\r\n               <!-- <mat-label>Name</mat-label>-->\r\n                <input [value]=\"group.name\" matInput placeholder=\"group name\" (keydown.enter)=\"this.labelVisible=true;onChangeName(name.value)\" #name>\r\n            </mat-form-field>\r\n        </div>\r\n    </mat-card-title>\r\n\r\n    <mat-card-actions align=\"end\">\r\n        <button mat-button (click)=\"onClickPickColor()\">set color</button>\r\n        <button mat-button>set icon</button>\r\n        <button mat-button (click)=\"onClickRemove()\">remove</button>\r\n    </mat-card-actions>\r\n\r\n</mat-card>","import { createAction, props } from \"@ngrx/store\";\r\nimport { IUser } from \"src/app/model/user\";\r\n\r\nexport namespace AccountActions{\r\n    export const authenticate = createAction(\"[Action] authenticate\", props<{name:string, pw:string}>())\r\n    export const authenticateSuccess = createAction(\"[Action] authenticate success\", props<{user:IUser}>())\r\n    export const authenticateFailure = createAction(\"[Action] authenticate failure\", props<{error:any}>())\r\n    \r\n    export const create = createAction(\"[Action] create\", props<{name:string, email:string, pw:string}>())\r\n    export const createSuccess = createAction(\"[Action] create success\", props<{user:IUser}>())\r\n    export const createFailure = createAction(\"[Action] create failure\", props<{error:any}>())\r\n    \r\n    export const logout = createAction(\"[Action] logout\")\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { IGroup } from 'src/app/model/group';\r\nimport { ITransaction } from 'src/app/model/transaction';\r\nimport { ITransactionGroup } from 'src/app/model/transactionGroup';\r\nimport { AccountService } from '../account/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TransactionsService{// implements OnInit, OnDestroy {\r\n  _baseUrl: string;\r\n  //subscription!: Subscription\r\n\r\n  constructor(private _http: HttpClient, \r\n              @Inject('baseUrl') baseUrl:string,\r\n              private _accountService: AccountService)\r\n  {\r\n    this._baseUrl = baseUrl\r\n  }\r\n\r\n  loadMonth(date:Date)\r\n  {\r\n    date = new Date(date.getFullYear(), date.getMonth());\r\n    let url:string = `${this._baseUrl}api/transactions/get/${this._accountService.getId()}/${date.toDateString()}/1`;\r\n    return this._http.get<ITransactionGroup[]>(url);\r\n  }\r\n\r\n  assign(transaction: ITransaction, group: IGroup)\r\n  {\r\n    let url:string = `${this._baseUrl}api/transactions/assign/${this._accountService.getId()}/${transaction.id}/${group.id}`;\r\n    return this._http.put(url,{})\r\n  }\r\n\r\n  \r\n  uploadCSVFile(file: File)\r\n  {\r\n    \r\n    /*\r\n    if(file.type != \"text/csv\")\r\n    {\r\n      console.log(\"no csv file selected\")\r\n      return;\r\n    }*/\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    let url = `${this._baseUrl}api/transactions/upload/${this._accountService.getId()}`\r\n\r\n    return this._http.post<ITransactionGroup[]>(url, formData)\r\n  }      \r\n}\r\n","import { createReducer, on } from \"@ngrx/store\";\r\nimport { IUser } from \"src/app/model/user\";\r\nimport { AccountActions } from \"./account.actions\";\r\n\r\nfunction spreadError(error:any){\r\n\r\n    let errorMsg = \"Unkown error!\";\r\n    switch(error.status)\r\n    {\r\n        case 404:\r\n            errorMsg=\"Page not found!\"\r\n            break;\r\n        case 504:\r\n            errorMsg=\"Server could not be reached!\"\r\n            break;\r\n    }\r\n    return errorMsg;\r\n}\r\n\r\nexport namespace AccountReducer{\r\n    \r\n    export interface State {\r\n        currentUser?: IUser;\r\n        lastError?:string\r\n    }\r\n\r\n    export const initialState: State = {\r\n    }\r\n\r\n    export const stateFeatureKey=\"account\";\r\n\r\n    export const reducer = createReducer(\r\n        initialState,\r\n        \r\n        on(AccountActions.authenticateSuccess,\r\n            (state, {user})=>({\r\n                ...state,\r\n                currentUser:user\r\n            })),\r\n        on(AccountActions.authenticateFailure,\r\n            (state, {error})=>({\r\n                ...state,\r\n                lastError:spreadError(error)\r\n            })),\r\n\r\n        on(AccountActions.createSuccess,\r\n            (state, {user})=>({\r\n                ...state,\r\n                currentUser:user\r\n        })),\r\n        on(AccountActions.createFailure,\r\n            (state, {error})=>({\r\n                ...state,\r\n                lastError:spreadError(error)\r\n            })),\r\n        on(AccountActions.logout,\r\n            (state, _)=>({\r\n                ...state,\r\n                currentUser:undefined,\r\n                lastError:undefined\r\n        })),\r\n    )   \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { IGroup } from \"src/app/model/group\";\r\nimport { GroupActions } from \"./groups.actions\";\r\n\r\nexport namespace GroupReducer\r\n{\r\n    export interface State{\r\n        items: IGroup[];\r\n        selectedGroups : IGroup[];\r\n        lastSearchTerm:string;\r\n    }\r\n    \r\n    export const initialState: State = {\r\n        items: [],\r\n        selectedGroups: [],\r\n        lastSearchTerm:\"\"\r\n    }\r\n\r\n    export function reducer(state=initialState, action:Action){\r\n        return _reducer(state, action)\r\n    }\r\n    export const stateFeatureKey='groups';\r\n}\r\nconst _reducer = createReducer(\r\n    GroupReducer.initialState,\r\n    on(GroupActions.loadAllSuccess, \r\n        (state, {groups}) => ({\r\n             ...state,                \r\n             items:groups\r\n        })),\r\n  \r\n    on(GroupActions.addSuccess, \r\n        (state, {group}) => ({\r\n             ...state,  \r\n             items:[...state.items, group]\r\n        })),\r\n                                \r\n    on(GroupActions.removeSuccess, \r\n        (state, {group}) => ({\r\n             ...state,  \r\n            items: state.items.filter(g=>g.id!==group.id)\r\n        })),\r\n\r\n    on(GroupActions.selectTypeahead,\r\n        (state, {input}) =>({\r\n            ...state,\r\n            selectedGroups: state.items.filter(g=>g.name.toUpperCase().includes(input.toUpperCase())),\r\n            lastSearchTerm:input                        \r\n        })),\r\n\r\n);\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-new-group',\r\n  templateUrl: './new-group.component.html',\r\n  styleUrls: ['./new-group.component.css']\r\n})\r\nexport class NewGroupDialog implements OnInit {\r\n\r\n\r\n  constructor(private _dialogRef: MatDialogRef<NewGroupDialog>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm(name:string){\r\n\r\n    this._dialogRef.close(name);\r\n  }\r\n\r\n}\r\n","<mat-form-field appearance=\"standard\">\r\n    <mat-label>Name</mat-label>\r\n    <input matInput placeholder=\"group name\" (keydown.enter)=\"this.confirm(name.value)\" #name>\r\n</mat-form-field>","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { GroupReducer } from \"./groups.reducer\";\r\n\r\n\r\nexport namespace GroupSelectors{ \r\n\r\n    export const getGroupState = createFeatureSelector<GroupReducer.State>(GroupReducer.stateFeatureKey);\r\n\r\n    export const getAllGroups = createSelector(getGroupState, \r\n        (state)=> state.items)\r\n\r\n    export const getTypeaheadSelection = createSelector(getGroupState,\r\n        (state) => state.selectedGroups)\r\n        \r\n    export const getLastSearchTerm = createSelector(getGroupState,\r\n        (state) => state.lastSearchTerm)\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { _STORE_FEATURES } from '@ngrx/store/src/tokens';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { TransactionsSelectors } from 'src/app/store/transactions/transactions.seletors';\r\n\r\n@Component({\r\n  selector: 'app-summary',\r\n  templateUrl: './summary.component.html',\r\n  styleUrls: ['./summary.component.css']\r\n})\r\nexport class SummaryComponent implements OnInit {\r\n\r\n  balanceGraph = {\r\n    data$: this._store.select(TransactionsSelectors.getBalance)\r\n        .pipe(map(({plus, minus})=> ([\r\n          {\r\n              x:[\"income\"],\r\n              y:[plus],\r\n              type:'bar',\r\n              text: [`${plus.toFixed(0)} €`],\r\n          },\r\n          {\r\n              x:[\"spendings\"],\r\n              y:[minus],\r\n              type:'bar',\r\n              text: [`${minus.toFixed(0)} €`],\r\n          },\r\n    ]))),\r\n    layout: {\r\n        width:320, \r\n        height:420,\r\n        barmode:'group',\r\n        showlegend:false\r\n      }\r\n   }\r\n\r\n   pieChart = {\r\n     data$: this._store.select(TransactionsSelectors.getPartitioning)\r\n          .pipe(map((results)=>([{\r\n            values:results.map(({value})=>value),\r\n            labels:results.map(({group})=>group.group?.name),\r\n            type:'pie',\r\n          }]))),\r\n     layout:{\r\n      width:500, \r\n      height:400,\r\n     }\r\n   }\r\n\r\n\r\n  constructor(private _store:Store) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div style=\"display: flex;\">\r\n    <plotly-plot [data]=\"(balanceGraph.data$|async)!\"\r\n                [layout]=\"balanceGraph.layout\"></plotly-plot>\r\n    <plotly-plot [data]=\"(pieChart.data$|async)!\"\r\n                [layout]=\"pieChart.layout\"></plotly-plot>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { first } from 'rxjs/operators';\r\nimport { baseUrl } from 'src/app/app.component';\r\nimport { IUser } from 'src/app/model/user';\r\nimport { AccountSelectors } from 'src/app/store/account/account.selectors';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  BASE_URL?:string;\r\n\r\n  constructor(private _http:HttpClient,\r\n             @Inject('baseUrl')baseUrl:string,\r\n             private _store :Store)\r\n  {\r\n    this.BASE_URL = baseUrl;\r\n  }\r\n\r\n  getId() {\r\n    let id\r\n    this._store.select(AccountSelectors.getUserId)\r\n               .pipe(first()).subscribe(val => id = val)\r\n    return id;\r\n  }\r\n  authenticate(name: string, pw: string) {\r\n    let url =`${this.BASE_URL}api/user/auth/${name}/${pw}` \r\n    return this._http.get<IUser>(url);\r\n  }\r\n  createAccount(name: string, email:string, pw: string) {\r\n    console.log(\"email:'\" + email+\"'\")\r\n    if(email === \"\"){\r\n      email = \"none\"\r\n    }\r\n\r\n    let url =`${this.BASE_URL}api/user/create/${name}/${email}/${pw}` \r\n    return this._http.get<IUser>(url);\r\n  }\r\n\r\n}\r\n","import { escapeRegExp } from \"@angular/compiler/src/util\";\r\nimport { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { partition } from \"rxjs\";\r\nimport { PartitioningType, TransactionsReducer } from \"./transactions.reducer\";\r\n\r\nexport namespace TransactionsSelectors{\r\n    export const getTransactionsState = createFeatureSelector<TransactionsReducer.State>(TransactionsReducer.stateFeatureKey)\r\n  \r\n    export const getDataDate = createSelector(getTransactionsState, \r\n        ({dataDate})=>dataDate);\r\n    export const getData = createSelector(getTransactionsState, \r\n        ({data})=>data);\r\n    export const getSelectedTransaction = createSelector(getTransactionsState, \r\n        ({selectedTransaction})=>selectedTransaction);\r\n            \r\n    export const isTransactionSelected = createSelector(getTransactionsState, \r\n        ({selectedTransaction})=>typeof(selectedTransaction)!==\"undefined\");\r\n    \r\n    export const getBalance = createSelector(getTransactionsState, \r\n        ({data})=>{\r\n            let plus = 0;\r\n            let minus = 0;\r\n\r\n            data.forEach(group => {\r\n                plus += group.totalPlus\r\n                minus -= group.totalMinus\r\n            });\r\n            return ({plus, minus});\r\n        });\r\n        \r\n    export const getParitioningType = createSelector(getTransactionsState, \r\n        ({data, partitioning})=>({data, partitioning}));\r\n    export const getPartitioning = createSelector(getParitioningType, \r\n        ({data, partitioning})=>{\r\n            if(partitioning === PartitioningType.Income)\r\n            {\r\n                return data.filter(g => g.totalPlus != 0).map(group=>({group, value:group.totalPlus}));\r\n            }\r\n            else\r\n            {\r\n                return data.filter(g => g.totalMinus != 0).map(group=>({group, value:-group.totalMinus}));\r\n            }\r\n        });\r\n            \r\n    }","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { first } from \"rxjs/operators\";\r\nimport { AccountSelectors } from \"src/app/store/account/account.selectors\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate{\r\n    constructor(private _store: Store, private _router:Router){}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, \r\n                state: RouterStateSnapshot)\r\n                : boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n       \r\n        let loginDone: boolean = false;\r\n\r\n        this._store.select(AccountSelectors.isLoginDone)\r\n                   .pipe(first()).subscribe(v=>loginDone = v);\r\n        \r\n\r\n        if(!loginDone)\r\n        {\r\n            console.log(\"redirect to login\");\r\n            const url = encodeURI(state.url);\r\n            this._router.navigate(['/login'], {queryParams: {redirect:url}})\r\n        }\r\n        return true;\r\n    }\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ITransactionGroup } from 'src/app/model/transactionGroup';\r\n\r\n@Component({\r\n  selector: 'app-group-title',\r\n  templateUrl: './group-title.component.html',\r\n  styleUrls: ['./group-title.component.css']\r\n})\r\nexport class GroupTitleComponent implements OnInit {\r\n@Input() data?:ITransactionGroup\r\n\r\n  constructor() { }\r\n\r\n  /*\r\n  total(){\r\n    return this.data?.total;\r\n  }*/\r\n\r\n  title(){\r\n    if(this.data?.group){\r\n      return this.data?.group?.name\r\n    }\r\n    else\r\n    {\r\n      return \"unassigned\"\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card style=\"background-color:lightslategray;\" \r\n          class=\"title-card\">\r\n                {{title()}} \r\n                (\r\n                    {{data?.transactions?.length}}x, \r\n                    <span [class.hide]=\"data?.totalPlus===0\">\r\n                        +{{data?.totalPlus|currency:'EUR'}} \r\n                    </span> \r\n                    <span [class.hide]=\"data?.totalPlus===0 || data?.totalMinus===0\">\r\n                        |\r\n                    </span> \r\n                    <span [class.hide]=\"data?.totalMinus===0\">\r\n                        {{data?.totalMinus|currency:'EUR'}}\r\n                    </span> \r\n                )\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { GroupsService } from 'src/app/services/groups/groups.service';\r\nimport { IGroup } from \"src/app/model/group\";\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store';\r\nimport { _STORE_FEATURES } from '@ngrx/store/src/tokens';\r\nimport { GroupActions } from 'src/app/store/groups/groups.actions';\r\nimport { GroupSelectors } from 'src/app/store/groups/groups.selectors';\r\n\r\n@Component({\r\n  selector: 'app-group-container',\r\n  templateUrl: './group-container.component.html',\r\n  styleUrls: ['./group-container.component.css']\r\n})\r\nexport class GroupContainerComponent implements OnInit {\r\n\r\n  groups$ = this._store.select(GroupSelectors.getAllGroups);\r\n\r\n  //groups$:Observable<IGroup[]> | undefined;\r\n\r\n  constructor(private _store: Store<AppState>) { }\r\n\r\n  ngOnInit(): void {\r\n    this._store.dispatch(GroupActions.loadAll());\r\n    this.reload()\r\n  }\r\n\r\n  reload(){\r\n//    this._store.dispatch(GroupActions)\r\n    //this.groups$ = this._groupsService.getGroups();\r\n  }\r\n\r\n}\r\n","<div>\r\n    <app-group *ngFor=\"let g of groups$ | async\" [group] = \"g\"></app-group>\r\n\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { AccountService } from \"src/app/services/account/account.service\";\r\nimport { AccountActions } from \"./account.actions\";\r\n\r\n@Injectable()\r\nexport class AccountEffects{\r\n\r\n    constructor(private actions$:Actions, private _accountService :AccountService){}\r\n\r\n    \r\n    authenticate = createEffect(() => this.actions$.pipe(\r\n        ofType(AccountActions.authenticate),\r\n        switchMap(({name, pw}) => \r\n            this._accountService.authenticate(name, pw)\r\n            .pipe(\r\n                map((user) => AccountActions.authenticateSuccess({user})),\r\n                catchError((error)=>of(AccountActions.authenticateFailure({error})))            \r\n        ))\r\n    ));\r\n\r\n    \r\n    create = createEffect(() => this.actions$.pipe(\r\n        ofType(AccountActions.create),\r\n        switchMap(({name, email, pw}) => \r\n            this._accountService.createAccount(name, email, pw)\r\n            .pipe(\r\n                map(user => AccountActions.createSuccess({user})),\r\n                catchError(error=>of(AccountActions.createFailure({error})))\r\n            )\r\n        )\r\n    ));\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { PingService } from './services/ping/ping.service';\r\nimport { AccountActions } from './store/account/account.actions';\r\nimport { AccountEffects } from './store/account/account.effects';\r\nimport { AccountSelectors } from './store/account/account.selectors';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'WebUIApp';\r\n\r\n  constructor(private _pingService: PingService,\r\n              private _store:Store,\r\n              private _router: Router)\r\n  {\r\n  }\r\n  ngOnInit(): void {\r\n    this._pingService.ping(true);\r\n    this._store.select(AccountSelectors.isLoginDone).subscribe(done=>{\r\n      if(!done)\r\n      {\r\n        this._router.navigate(['\\login'])\r\n      }\r\n    })\r\n  }\r\n\r\n  performLogout(){\r\n    this._store.dispatch(AccountActions.logout());\r\n  }\r\n\r\n}\r\n\r\n//export const baseUrl :String = \"http://localhost:5000/\";\r\n//export const baseUrl :String = \"https://localhost:44394/\";\r\n//export const baseUrl :String = \"https://62.75.175.66:44394/\";\r\nexport const baseUrl :String = \"http://62.75.175.66:5000/\";\r\n","\r\n<mat-toolbar color=\"primary\">\r\n    <nav>\r\n        <a routerLink=\"/user/home\" routerLinkActive=\"active\" mat-button>Home</a>\r\n        <a routerLink=\"/user/transactions\" routerLinkActive=\"active\" mat-button>Upload</a>\r\n        <a routerLink=\"/user/groups\" routerLinkActive=\"active\" mat-button>Manage Groups</a>\r\n        <button (click)=\"performLogout()\" mat-icon-button><mat-icon>logout</mat-icon></button>\r\n    </nav>\r\n</mat-toolbar>\r\n<div style=\"width:70%; height:viewport; margin-left:auto; margin-right:auto\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { TransactionsService } from 'src/app/services/transactions/transactions.service';\r\nimport { TransactionActions } from 'src/app/store/transactions/transactions.actions';\r\n\r\n@Component({\r\n  selector: 'app-upload-page',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadPageComponent implements OnInit {\r\n\r\n  constructor(private _store:Store){ \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  uploadFile(file:File){\r\n    this._store.dispatch(TransactionActions.upload({file}))\r\n  }\r\n\r\n}\r\n","<app-upload (fileSelected)=\"this.uploadFile($event)\"></app-upload>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UploadPageComponent } from '../components/pages/upload/upload.component';\r\nimport { GroupsComponent } from '../components/pages/groups/groups.component';\r\nimport { HomeComponent } from '../components/pages/home/home.component';\r\nimport { LoginComponent } from '../components/pages/login/login.component';\r\nimport { LoginGuard } from './guards/loginGuard';\r\n\r\nconst userRoutes: Routes = [\r\n  {path: 'home', component: HomeComponent },\r\n  {path: 'transactions', component: UploadPageComponent},\r\n  {path: 'groups', component: GroupsComponent},\r\n]\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'user', canActivate:[LoginGuard],  children:userRoutes}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { ActionReducerMap, createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { AccountEffects } from \"./account/account.effects\";\r\nimport { AccountReducer } from \"./account/account.reducer\";\r\nimport { GroupEffects } from \"./groups/groups.effects\";\r\nimport { GroupReducer } from \"./groups/groups.reducer\";\r\nimport { TransactionsEffects } from \"./transactions/transactions.effects\";\r\nimport { TransactionsReducer } from \"./transactions/transactions.reducer\";\r\n\r\nexport interface AppState {\r\n    groups: GroupReducer.State\r\n    account: AccountReducer.State\r\n    transactions: TransactionsReducer.State\r\n}\r\n\r\nexport const AppReducers: ActionReducerMap<AppState> ={\r\n    groups: GroupReducer.reducer,\r\n    account: AccountReducer.reducer,\r\n    transactions: TransactionsReducer.reducer\r\n}\r\n\r\nexport const AppEffects = [GroupEffects, AccountEffects, TransactionsEffects]","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { NewGroupDialog } from 'src/app/components/dialogs/new-group/new-group.component';\r\nimport { GroupsService } from 'src/app/services/groups/groups.service';\r\nimport { GroupActions } from 'src/app/store/groups/groups.actions';\r\nimport { GroupSelectors } from 'src/app/store/groups/groups.selectors';\r\n\r\n@Component({\r\n  selector: 'app-group-selector',\r\n  templateUrl: './group-selector.component.html',\r\n  styleUrls: ['./group-selector.component.css']\r\n})\r\nexport class GroupSelectorComponent implements OnInit {\r\n\r\n  searchTerm = new FormControl()\r\n\r\n  groups$ = this._store.select(GroupSelectors.getTypeaheadSelection)\r\n\r\n  constructor(private _store: Store, private _dialog:MatDialog) { }\r\n  ngOnInit(): void {\r\n    this._store.dispatch(GroupActions.loadAll());\r\n\r\n    this.searchTerm.valueChanges.subscribe(value => {\r\n        this._store.dispatch(GroupActions.selectTypeahead({input:value}))\r\n      }     \r\n    )\r\n  }\r\n  onClickAddGroup(name:string){\r\n    if(name.length > 2)\r\n    {\r\n      this._store.dispatch(GroupActions.add({group:{name}}))\r\n    }\r\n    else\r\n    {\r\n      let dialogRef = this._dialog.open(NewGroupDialog);\r\n      dialogRef.afterClosed().subscribe(name => {\r\n        if(name){\r\n          this._store.dispatch(GroupActions.add({group:{name}}))\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"group-selector\">\r\n  <div style=\"display:flex; align-items: center;\">\r\n    <mat-form-field appearance=\"standard\">\r\n      <input [formControl]=\"searchTerm\" matInput\r\n          (keydown.enter)= \"this.onClickAddGroup(name.value);\"\r\n          placeholder=\"search group\" #name>\r\n    </mat-form-field>\r\n    <button mat-mini-fab color=\"primary\" \r\n            (click)=\"this.onClickAddGroup(name.value);\"\r\n            style=\"margin-left: 5pt;\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </div>\r\n  <app-small-group style=\"margin-bottom: 4pt;\" class=\"assignment-group\" \r\n        *ngFor=\"let g of groups$ | async\" \r\n        [group]=\"g\"  #group>\r\n  </app-small-group>\r\n</div>","import { LOCALE_ID, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { AppRoutingModule } from './routing/app-routing.module';\r\nimport { AppComponent, baseUrl } from './app.component';\r\n\r\nimport { LoginComponent } from './components/pages/login/login.component';\r\nimport { HomeComponent } from './components/pages/home/home.component';\r\nimport { UploadPageComponent } from './components/pages/upload/upload.component';\r\nimport { GroupsComponent } from './components/pages/groups/groups.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule } from '@angular/material/form-field';\r\nimport {TextFieldModule} from '@angular/cdk/text-field'\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatInputModule } from '@angular/material/input';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop'\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\nimport { UploadComponent } from './components/customs/upload/upload.component';\r\nimport { TransactionComponent } from './components/customs/transaction/transaction.component';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeDe from '@angular/common/locales/de';\r\nimport { GroupComponent } from './components/customs/group/group.component';\r\nimport { GroupContainerComponent } from './components/customs/group-container/group-container.component';\r\nimport { NewGroupDialog } from './components/dialogs/new-group/new-group.component';\r\n\r\nimport { ColorPickerModule } from '@iplab/ngx-color-picker';\r\nimport { ColorDialogComponent } from './components/dialogs/color-dialog/color-dialog.component';\r\nimport { SmallGroupComponent } from './components/pages/home/small-group/small-group.component';\r\nimport { GroupTitleComponent } from './components/pages/home/group-title/group-title.component';\r\nimport { GroupSelectorComponent } from './components/pages/home/group-selector/group-selector.component';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '../environments/environment';\r\nimport { AppEffects, AppReducers } from './store';\r\nimport { GroupEffects } from './store/groups/groups.effects';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { StringReplacementPipe } from './pipes/string-replacement.pipe';\r\n\r\n\r\nimport * as PlotlyJS from 'plotly.js-dist-min';\r\nimport { PlotlyModule } from 'angular-plotly.js';\r\nimport { SummaryComponent } from './components/pages/home/summary/summary.component';\r\n\r\nregisterLocaleData(localeDe, 'de-DE', localeDeExtra);\r\n\r\nPlotlyModule.plotlyjs = PlotlyJS;\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    UploadComponent,\r\n    GroupsComponent,\r\n    UploadPageComponent,\r\n    TransactionComponent,\r\n    GroupComponent,\r\n    GroupContainerComponent,\r\n    NewGroupDialog,\r\n    ColorDialogComponent,\r\n    SmallGroupComponent,\r\n    GroupTitleComponent,\r\n    GroupSelectorComponent,\r\n    StringReplacementPipe,\r\n    SummaryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    TextFieldModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    ColorPickerModule,\r\n    DragDropModule,\r\n    MatTreeModule,\r\n    ReactiveFormsModule,\r\n    PlotlyModule,\r\n    \r\n    StoreModule.forRoot(AppReducers),\r\n    EffectsModule.forRoot(AppEffects),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\r\n    \r\n    \r\n    //StoreModule.forFeature(fromState.stateFeatureKey, fromState.reducers, { metaReducers: fromState.metaReducers })\r\n  ],\r\n  providers: [{provide: 'baseUrl', useValue: baseUrl},\r\n              {provide: LOCALE_ID, useValue: 'de-DE'},\r\n            ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\nfunction localeDeExtra(localeDe: any, arg1: string, localeDeExtra: any) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { AccountReducer } from \"./account.reducer\";\r\n\r\nexport namespace AccountSelectors{\r\n    export const getAccountState = createFeatureSelector<AccountReducer.State>(AccountReducer.stateFeatureKey)\r\n\r\n    export const isLoginDone = createSelector(getAccountState, \r\n        state => typeof(state.currentUser) != \"undefined\")\r\n        \r\n    export const getUserData = createSelector(getAccountState, \r\n        ({currentUser}) => currentUser);\r\n\r\n    export const getUserId = createSelector(getAccountState, \r\n        ({currentUser}) => currentUser?.id);\r\n\r\n    export const getLastError = createSelector(getAccountState,\r\n        ({lastError}) => lastError)\r\n\r\n    export const hasError = createSelector(getAccountState,\r\n        ({lastError}) =>typeof(lastError) ===\"undefined\")\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { catchError, map, switchMap, tap, withLatestFrom } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\nimport { GroupActions } from \"./groups.actions\";\r\nimport { GroupsService } from \"src/app/services/groups/groups.service\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { GroupSelectors } from \"./groups.selectors\";\r\n\r\n@Injectable()\r\nexport class GroupEffects{\r\n\r\n    constructor(private actions$: Actions, \r\n                private groupService: GroupsService,\r\n                private _store:Store){}\r\n    \r\n\r\n\r\n    loadGroups = createEffect(() => this.actions$.pipe(\r\n        ofType(GroupActions.loadAll),\r\n        switchMap(_ => this.groupService.getGroups()\r\n            .pipe( \r\n                map((groups) => GroupActions.loadAllSuccess({ groups })),\r\n                catchError(error => of(GroupActions.loadAllFailure({ error })))\r\n            )            \r\n        )\r\n    ));\r\n    loadGroupsSuccess = createEffect(() => this.actions$.pipe(\r\n        ofType(GroupActions.loadAllSuccess),\r\n        map(_=>GroupActions.selectTypeahead({input:\"\"}))\r\n    ));\r\n    addGroup = createEffect(() => this.actions$.pipe(\r\n        ofType(GroupActions.add),\r\n        switchMap(action => this.groupService.addGroup(action.group)\r\n            .pipe( \r\n                map(group => GroupActions.addSuccess({ group })),\r\n                catchError(error => of(GroupActions.loadAllFailure({ error })))\r\n            )\r\n        )\r\n    ));\r\n    addGroupSuccess = createEffect(()=> this.actions$.pipe(\r\n        ofType(GroupActions.addSuccess),\r\n        withLatestFrom(this._store.select(GroupSelectors.getLastSearchTerm)),\r\n        map(([_,searchTerm])=>GroupActions.selectTypeahead({input:searchTerm}))       \r\n    ));\r\n\r\n    removeGroup = createEffect(() => this.actions$.pipe(\r\n        ofType(GroupActions.remove),\r\n        switchMap(action => this.groupService.removeGroup(action.group)\r\n            .pipe( \r\n                map(_ => GroupActions.removeSuccess({ group:action.group })),\r\n                catchError(error => of(GroupActions.removeFailure({ error })))\r\n            )\r\n        )\r\n    ));\r\n\r\n}\r\n","import { Component, OnInit, Output, EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\n\r\nexport class UploadComponent implements OnInit {\r\n  @Output('fileSelected') selectionEvent:EventEmitter<File>;\r\n\r\n  fileName : string = \"\";\r\n\r\n  constructor() { \r\n    this.selectionEvent = new EventEmitter<File>();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onFileSelected(event: Event) : void\r\n  {\r\n    const input = event.target as HTMLInputElement;\r\n\r\n    if (!input.files?.length) {\r\n      return;\r\n    }\r\n\r\n    const file = input.files[0];\r\n    this.fileName = file.name\r\n    this.selectionEvent.emit(file);\r\n  }\r\n}\r\n","<!--https://blog.angular-university.io/angular-file-upload/-->\r\n<input type=\"file\" class=\"file-input\" (change)=\"onFileSelected($event)\" #fileUpload>\r\n\r\n<div class=\"file-upload\">\r\n\r\n    {{fileName || \"Select File\"}}\r\n \r\n     <button mat-mini-fab color=\"primary\" class=\"upload-btn\" (click)=\"fileUpload.click()\">\r\n         <mat-icon>attach_file</mat-icon>\r\n     </button>\r\n </div>","import { createAction, props } from \"@ngrx/store\";\r\nimport { IGroup } from \"src/app/model/group\";\r\nimport { ITransaction } from \"src/app/model/transaction\";\r\nimport { ITransactionGroup } from \"src/app/model/transactionGroup\";\r\nimport { PartitioningType } from \"./transactions.reducer\";\r\n\r\nexport namespace TransactionActions{\r\n    export const loadMonth = createAction(\"[Transaction] loadMonth\", props<{year:number, month:number}>())\r\n    export const loadMonthSuccess = createAction(\"[Transaction] loadMonth success\", props<{transactions:ITransactionGroup[]}>())\r\n    export const loadMonthFailure = createAction(\"[Transaction] loadMonth failure\", props<{error:any}>())\r\n\r\n    export const assignGroup = createAction(\"[Transaction] assignGroup\", props<{group:IGroup}>())\r\n    export const assignGroupSuccess = createAction(\"[Transaction] assignGroup success\")\r\n    export const assignGroupFailure = createAction(\"[Transaction] assignGroup failure\", props<{error:any}>())\r\n\r\n    export const upload = createAction(\"[Transaction] upload\", props<{file:File}>());\r\n    export const uploadSuccess = createAction(\"[Transaction] upload sucess\");\r\n    export const uploadFailure = createAction(\"[Transaction] upload failure\", props<{error:any}>());\r\n\r\n    export const selectTransaction = createAction(\"[Transaction] selectTransaction\", props<{transaction:ITransaction}>());\r\n    export const deselectTransaction = createAction(\"[Transaction] deselectTransaction\");\r\n\r\n    export const setPartitioningType = createAction(\"[Transaction] setPartitioningType\", props<{paritioningType:PartitioningType}>());\r\n\r\n}","import { Action, createAction, props } from \"@ngrx/store\";\r\nimport { IGroup } from \"src/app/model/group\";\r\n\r\n\r\nexport namespace GroupActions {\r\n    export const loadAll = createAction('[Group] Load all')\r\n    export const loadAllSuccess = createAction('[Group] Load all success', props<{ groups: IGroup[] }>())\r\n    export const loadAllFailure = createAction('[Group] Load all failure', props<{ error: any }>())\r\n\r\n    export const add = createAction('[Group] add', props<{ group: IGroup }>())\r\n    export const addSuccess = createAction('[Group] add success', props<{ group: IGroup }>())\r\n    export const addFailure = createAction('[Group] add failure', props<{ error: any }>())\r\n    \r\n    export const remove = createAction('[Group] remove', props<{ group: IGroup }>())\r\n    export const removeSuccess = createAction('[Group] remove success', props<{ group: IGroup }>())\r\n    export const removeFailure = createAction('[Group] remove failure', props<{ error: any }>())\r\n    \r\n    export const selectTypeahead = createAction('[Group] select typeahead', props<{ input:string }>())\r\n    \r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { GroupsService } from 'src/app/services/groups/groups.service';\r\nimport { IGroup } from \"src/app/model/group\";\r\nimport { Store } from '@ngrx/store';\r\nimport { TransactionActions } from 'src/app/store/transactions/transactions.actions';\r\n\r\n@Component({\r\n  selector: 'app-small-group',\r\n  templateUrl: './small-group.component.html',\r\n  styleUrls: ['./small-group.component.css']\r\n})\r\nexport class SmallGroupComponent implements OnInit {\r\n  @Input()group!:IGroup;\r\n\r\n  getId(){\r\n    if(this.group) return this.group.id;\r\n    else return 0\r\n  }\r\n\r\n  constructor(private _store: Store) { }\r\n\r\n  onClick(){\r\n    this._store.dispatch(TransactionActions.assignGroup({group:this.group}))\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card (click)=\"this.onClick()\">\r\n    <mat-card-title >\r\n        {{group?.name}}\r\n    </mat-card-title>\r\n</mat-card>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { first } from 'rxjs/operators';\r\nimport { ITransaction } from 'src/app/model/transaction';\r\nimport { TransactionActions } from 'src/app/store/transactions/transactions.actions';\r\nimport { TransactionsSelectors } from 'src/app/store/transactions/transactions.seletors';\r\n@Component({\r\n  selector: 'app-transaction',\r\n  templateUrl: './transaction.component.html',\r\n  styleUrls: ['./transaction.component.css']\r\n})\r\nexport class TransactionComponent implements OnInit {\r\n\r\n@Input()transaction:ITransaction;\r\n\r\n  selectedTransaction$ = this._store.select(TransactionsSelectors.getSelectedTransaction)\r\n\r\n  constructor(private _store:Store) { \r\n    this.transaction = {target:\"\", purpose:\"\", date:new Date(), amount:0};\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onDoubleClick(){\r\n    let selection;\r\n    this.selectedTransaction$.pipe(first()).subscribe(val=>selection=val)\r\n\r\n    if(selection && (selection as ITransaction).id == this.transaction.id)\r\n    {\r\n      this._store.dispatch(TransactionActions.deselectTransaction())\r\n    }\r\n    else\r\n    {\r\n      this._store.dispatch(TransactionActions.selectTransaction({transaction:this.transaction}))\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-card [class.selected]=\"(this.selectedTransaction$ |async)?.id===this.transaction.id\" class=\"transaction\" (dblclick)=\"this.onDoubleClick()\">\r\n\r\n    <mat-card-header>\r\n        <mat-card-title>{{transaction.target}} ({{transaction.amount |currency:'EUR'}})</mat-card-title>\r\n        <mat-card-subtitle>{{transaction.date | date:\"dd-MM-YYYY\"}}: {{transaction.purpose | stringReplacement}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n\r\n</mat-card>","import { createReducer, on } from \"@ngrx/store\";\r\nimport { partition } from \"rxjs\";\r\nimport { ITransaction } from \"src/app/model/transaction\";\r\nimport { ITransactionGroup } from \"src/app/model/transactionGroup\";\r\nimport { TransactionActions } from \"./transactions.actions\";\r\n\r\nexport enum PartitioningType{\r\n    Income,\r\n    Spendings\r\n}\r\n\r\nexport namespace TransactionsReducer{\r\n\r\n    export interface State{\r\n        dataDate: Date;\r\n        data: ITransactionGroup[];\r\n        selectedTransaction?: ITransaction;\r\n        partitioning:PartitioningType;\r\n    }\r\n    export const initialState :State = {\r\n        dataDate: new Date(),\r\n        data:[],\r\n        selectedTransaction:undefined,\r\n        partitioning: PartitioningType.Spendings\r\n    }\r\n\r\n    export const stateFeatureKey = \"transactions\";\r\n    \r\n    export const reducer = createReducer(\r\n        initialState,\r\n\r\n        on(TransactionActions.setPartitioningType,\r\n            (state, {paritioningType}) => ({\r\n                ...state,\r\n                partitioning:paritioningType\r\n            })),\r\n        on(TransactionActions.selectTransaction,\r\n            (state, {transaction}) => ({\r\n                ...state,\r\n                selectedTransaction:transaction\r\n            })),\r\n        on(TransactionActions.deselectTransaction,\r\n            (state, _) => ({\r\n                ...state,\r\n                selectedTransaction:undefined,\r\n                lastSearchTerm:\"\"\r\n            })),\r\n        on(TransactionActions.assignGroupSuccess,\r\n            (state, _) => ({\r\n                ...state,\r\n                selectedTransaction:undefined,\r\n                lastSearchTerm:\"\"\r\n            })),\r\n        \r\n        on(TransactionActions.loadMonth,\r\n            (state, {year, month}) => ({\r\n                ...state,\r\n                dataDate: new Date(year, month)\r\n            })),\r\n            \r\n        on(TransactionActions.loadMonthSuccess,\r\n            (state, {transactions}) => ({\r\n                ...state,\r\n                data: [...transactions]\r\n            })),\r\n    )\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { ColorPickerControl } from '@iplab/ngx-color-picker';\r\n\r\n@Component({\r\n  selector: 'app-color-dialog',\r\n  templateUrl: './color-dialog.component.html',\r\n  styleUrls: ['./color-dialog.component.css']\r\n})\r\nexport class ColorDialogComponent implements OnInit {\r\n\r\n  pickerControl: ColorPickerControl =  new ColorPickerControl();\r\n\r\n  constructor(private _dialogRef: MatDialogRef<ColorDialogComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm(){\r\n    this._dialogRef.close()\r\n  }\r\n  abort(){\r\n    this._dialogRef.close()\r\n  }\r\n\r\n}\r\n","\r\n<chrome-picker [control]=\"this.pickerControl\"></chrome-picker>\r\n\r\n<div align=\"center\" class=\"buttons\">\r\n    <button (click)=\"confirm()\" mat-button>Confirm</button>\r\n    <button (click)=\"abort()\" mat-button>Abort</button>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'stringReplacement'\r\n})\r\nexport class StringReplacementPipe implements PipeTransform {\r\n\r\n  transform(value: string): string {  \r\n    let re = /\\+/gi\r\n    return value.replace(re, \" \");\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nconst TIMEOUT = 2000\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PingService {\r\n  pingTimeMs$ = new BehaviorSubject<number>(-1)\r\n  BASE_URL:string = \"\"\r\n\r\n  constructor(private _http: HttpClient, \r\n              @Inject('baseUrl')baseUrl:string) {\r\n                \r\n      this.BASE_URL = baseUrl\r\n    }\r\n\r\n    reping() {\r\n\r\n    }\r\n\r\n    pinger : any;\r\n\r\n    finished = false;\r\n\r\n\r\n  async ping(once:boolean){\r\n\r\n    this.finished = false;\r\n\r\n    let stamp = performance.now();\r\n    let sub = this._http.get<number>(`${this.BASE_URL}api/ping`)\r\n              .subscribe(v =>\r\n    {\r\n      let t = performance.now()-stamp\r\n      if(t < TIMEOUT)\r\n      {\r\n        this.finished = true;\r\n        console.log(\"ping: \" + t + \" ms\")\r\n      }\r\n    }, e=>{\r\n      this.finished = true;\r\n      console.log(\"Ping failed!\", e)\r\n    })\r\n\r\n    setTimeout(() =>{\r\n      if(!this.finished)\r\n      {\r\n        console.log(\"Ping failed! (timeout)\")\r\n        sub.unsubscribe()      \r\n      } \r\n      if(!once)\r\n      {\r\n        this.ping(false);\r\n      }\r\n    }, TIMEOUT);\r\n  \r\n\r\n    return 0;\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Output, EventEmitter} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { first } from 'rxjs/operators';\r\nimport { AccountActions } from 'src/app/store/account/account.actions';\r\nimport { AccountSelectors } from 'src/app/store/account/account.selectors';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  error$ = this._store.select(AccountSelectors.getLastError)\r\n  hasError$ = this._store.select(AccountSelectors.hasError)\r\n\r\n  loginDone$ = this._store.select(AccountSelectors.isLoginDone)\r\n\r\n  constructor(private _store:Store, private _router:Router) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loginDone$.subscribe(done =>{\r\n      if(done)\r\n      {\r\n        this._router.navigate(['/user/home'])\r\n      }\r\n    })\r\n  }\r\n\r\n  performLogin(name:string, pw:string)\r\n  {\r\n    this._store.dispatch(AccountActions.authenticate({name, pw}))\r\n  }\r\n  registerUser(name:string, email:string, pw:string)\r\n  {\r\n    this._store.dispatch(AccountActions.create({name, email, pw}))\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"form\">\r\n    <mat-form-field>\r\n        <mat-label >Name:</mat-label>\r\n        <input matInput #name/>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n        <mat-label>Password:</mat-label>\r\n        <input matInput #pw/>\r\n    </mat-form-field>\r\n    <div class=\"par\">\r\n\r\n    <mat-label [class.hide]=\"hasError$|async\" class=\"error\">{{error$ | async}}</mat-label>\r\n\r\n    </div>\r\n    <mat-form-field>\r\n        <mat-label>E-Mail:</mat-label>\r\n        <input matInput #email/>\r\n    </mat-form-field>      \r\n</div>\r\n<div class=\"form\">\r\n    <button mat-raised-button (click)=\"performLogin(name.value, pw.value)\" color =\"primary\" class=\"buttons\">login</button>\r\n    <button mat-raised-button (click)=\"registerUser(name.value, email.value, pw.value)\" color =\"primary\"  class=\"button-reg\">register</button>\r\n    <!--button mat-raised-button (click)=\"performLogin('Falrach', 'test')\"  color =\"primary\" class=\"buttons\">skip</button-->\r\n</div>","import { CdkDragDrop, CdkDragEnd } from '@angular/cdk/drag-drop';\r\nimport { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, OnInit, Output, EventEmitter, ViewChildren, ElementRef} from '@angular/core';\r\nimport { MatTreeFlatDataSource } from '@angular/material/tree';\r\nimport { Observable } from 'rxjs';\r\nimport { GroupsService } from 'src/app/services/groups/groups.service';\r\nimport { TransactionsService } from 'src/app/services/transactions/transactions.service';\r\nimport { SmallGroupComponent } from './small-group/small-group.component';\r\nimport { IGroup } from \"src/app/model/group\";\r\nimport { ITransactionGroup } from 'src/app/model/transactionGroup';\r\nimport { ITransaction } from 'src/app/model/transaction';\r\nimport { Store } from '@ngrx/store';\r\nimport { TransactionsSelectors } from 'src/app/store/transactions/transactions.seletors';\r\nimport { GroupSelectors } from 'src/app/store/groups/groups.selectors';\r\nimport { _STORE_FEATURES } from '@ngrx/store/src/tokens';\r\nimport { TransactionsEffects } from 'src/app/store/transactions/transactions.effects';\r\nimport { TransactionActions } from 'src/app/store/transactions/transactions.actions';\r\nimport { AppState } from 'src/app/store';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  year:number = new Date().getFullYear();\r\n  month:number = new Date().getMonth();\r\n\r\n  date!: Date;\r\n  transactionGroups$ = this._store.select(TransactionsSelectors.getData);\r\n\r\n  isTransactionSelected$ = this._store.select(TransactionsSelectors.isTransactionSelected)\r\n\r\n  currentGroup?:IGroup;\r\n\r\n  constructor(private _store:Store<AppState>) {\r\n  }\r\n\r\n  isSelectedGroup(group: IGroup)\r\n  {\r\n    if(!this.currentGroup)\r\n    {\r\n      return false;\r\n    }\r\n    return this.currentGroup.id === group.id\r\n  }\r\n\r\n\r\n\r\n\r\n  update(){\r\n    this.date = new Date(this.year, this.month);\r\n    this.reload();\r\n  }\r\n\r\n  previousMonth(){\r\n    this.month -=1;\r\n    if(this.month < 0)\r\n    {\r\n      this.month = 11;\r\n      this.year -=1;\r\n    }\r\n    this.update();\r\n  }\r\n\r\n  nextMonth(){\r\n    this.month +=1;\r\n    if(this.month > 11)\r\n    {\r\n      this.month = 0;\r\n      this.year +=1;\r\n    }\r\n    this.update();\r\n  }\r\n\r\n\r\n  drop(transaction: ITransaction, event:CdkDragEnd){\r\n//    document.elementFromPoint()\r\n\r\n\r\n    if(!this.currentGroup){\r\n      return\r\n    }\r\n\r\n    /*\r\n    this._transactionsService.assign(transaction, this.currentGroup).subscribe(res=>{\r\n      this.reload();\r\n    })*/\r\n  }\r\n\r\n  enterGroup(groupComponent: SmallGroupComponent)\r\n  {\r\n    this.currentGroup = groupComponent.group\r\n  }\r\n  leaveGroup()\r\n  {\r\n    this.currentGroup = undefined\r\n  }\r\n\r\n  sort(input:any)\r\n  {\r\n    let groups = input as ITransactionGroup[];\r\n    groups = [...groups].sort((a,b)=>{\r\n      if(a.group === null)\r\n      {\r\n        return -1;\r\n      }\r\n      if(b.group === null)\r\n      {\r\n        return 1;\r\n      }\r\n      return a.totalMinus - b.totalMinus;\r\n    });\r\n    return groups;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {  \r\n\r\n   // this.groups$ = this._groupService.getGroups()\r\n  //  this.transactionGroups$ = this._transactionsService.groups$;\r\n    this.update();\r\n  }\r\n\r\n  reload(){  \r\n    this._store.dispatch(TransactionActions.loadMonth({year:this.year, month:this.month}))\r\n    //this._transactionsService.loadMonth(this.date).subscribe();\r\n  }\r\n  \r\n}\r\n","\r\n<div align=\"center\">\r\n    <button mat-button (click)=\"this.previousMonth();\"><</button>\r\n    {{date | date:\"MMMM yyyy\"}}\r\n    <button mat-button (click)=\"this.nextMonth();\">></button>\r\n</div>\r\n\r\n<app-summary></app-summary>\r\n\r\n<div class=\"main-container\" >\r\n    <div cdkDropList class=\"transactions-container\" >\r\n        <div *ngFor=\"let group of this.sort(transactionGroups$ | async)\">\r\n            <app-group-title [data]=\"group\"></app-group-title>\r\n            <app-transaction *ngFor=\"let transaction of group.transactions\" \r\n                            [transaction] = \"transaction\"\r\n                            class=\"transaction\" \r\n                            (cdkDragEnded)=\"drop(transactionComponent.transaction, $event)\" \r\n                            cdkDrag #transactionComponent></app-transaction>     \r\n        </div>   \r\n    </div>\r\n    <div class=\"groups-container\" [class.hide]=\"!(isTransactionSelected$|async)\">\r\n        <app-group-selector ></app-group-selector>\r\n    </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IGroup } from \"src/app/model/group\";\r\nimport { tap, map, first } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport { AccountSelectors } from 'src/app/store/account/account.selectors';\r\nimport { AccountService } from '../account/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupsService {\r\n\r\n  BASE_URL:string = \"\"\r\n\r\n  groupsChanged$ : Subject<IGroup> = new Subject<IGroup>();\r\n\r\n  constructor(private _http: HttpClient, \r\n              private _accountService:AccountService,\r\n              @Inject('baseUrl')baseUrl:string) \r\n  {\r\n    this.BASE_URL = baseUrl\r\n  }\r\n\r\n  getGroups(): Observable<IGroup[]>\r\n  {\r\n    let url = `${this.BASE_URL}api/groups/${this._accountService.getId()}`\r\n    return this._http.get<IGroup[]>(url)\r\n  }\r\n\r\n\r\n  saveGroup(group:IGroup)\r\n  {   \r\n    const url:string = `${this.BASE_URL}api/groups/${this._accountService.getId()}/`\r\n    \r\n    const method:string = group.id ? 'PUT' : 'POST';\r\n    \r\n    return this._http.request(method, url + (group.id || ''),{\r\n      body:group\r\n    }).pipe(tap(_=>this.groupsChanged$.next(group)));\r\n  }\r\n\r\n\r\n  removeGroup(group:IGroup)\r\n  {\r\n    let url = `${this.BASE_URL}api/groups/${this._accountService.getId()}/${group.id}`\r\n    return this._http.delete(url).pipe(tap(_=>this.groupsChanged$.next(group)))\r\n  }\r\n\r\n\r\n  addGroup(group: IGroup) {\r\n    const url:string = `${this.BASE_URL}api/groups/${this._accountService.getId()}`\r\n    \r\n    return this._http.post<IGroup>(url,group);\r\n    \r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { GroupsService } from 'src/app/services/groups/groups.service';\r\nimport { AppState } from 'src/app/store';\r\nimport { GroupActions } from 'src/app/store/groups/groups.actions';\r\nimport { GroupContainerComponent } from '../../customs/group-container/group-container.component';\r\nimport { NewGroupDialog } from '../../dialogs/new-group/new-group.component';\r\n\r\n@Component({\r\n  selector: 'app-groups',\r\n  templateUrl: './groups.component.html',\r\n  styleUrls: ['./groups.component.css']\r\n})\r\nexport class GroupsComponent {\r\n  @ViewChild(GroupContainerComponent) groups!:GroupContainerComponent;\r\n\r\n  groupChangedSubscription!:Subscription;\r\n\r\n\r\n  constructor(private _dialog: MatDialog, private _store: Store<AppState>) { }\r\n\r\n  \r\n\r\n  onClickAddGroup(){\r\n    const dialogRef = this._dialog.open(NewGroupDialog);\r\n\r\n    dialogRef.afterClosed().subscribe(name => {\r\n      this._store.dispatch(GroupActions.add({group:{name}}))\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"flex\">\r\n    <button mat-mini-fab color=\"primary\" (click)=\"this.onClickAddGroup();\">\r\n        <mat-icon>add</mat-icon>\r\n    </button>\r\n\r\n    <app-group-container #groups></app-group-container>\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap, withLatestFrom } from \"rxjs/operators\";\r\nimport { ITransactionGroup } from \"src/app/model/transactionGroup\";\r\nimport { TransactionsService } from \"src/app/services/transactions/transactions.service\";\r\nimport { TransactionActions } from \"./transactions.actions\";\r\nimport { TransactionsReducer } from \"./transactions.reducer\";\r\nimport { TransactionsSelectors } from \"./transactions.seletors\";\r\n\r\n@Injectable()\r\nexport class TransactionsEffects{\r\n    constructor(private _actions$:Actions, \r\n                private _store:Store, \r\n                private _transactionService:TransactionsService){}\r\n\r\n    loadMonth = createEffect(()=>this._actions$.pipe(\r\n        ofType(TransactionActions.loadMonth),\r\n        switchMap(({year, month}) => \r\n            this._transactionService.loadMonth(new Date(year, month))\r\n            .pipe(\r\n                map((transactions) => TransactionActions.loadMonthSuccess({transactions})),\r\n                catchError((error) => of(TransactionActions.loadMonthFailure({error})))\r\n        ))\r\n    ));\r\n\r\n    assignGroupSuccess = createEffect(()=>this._actions$.pipe(\r\n        ofType(TransactionActions.assignGroupSuccess),\r\n        withLatestFrom(this._store.select(TransactionsSelectors.getDataDate)),\r\n        switchMap(([_, date]) =>{\r\n            let year = date.getFullYear()\r\n            let month = date.getMonth()\r\n            return of(TransactionActions.loadMonth({year, month}));\r\n        })\r\n    ));\r\n\r\n\r\n    assignGroup = createEffect(()=>this._actions$.pipe(\r\n        ofType(TransactionActions.assignGroup),\r\n        withLatestFrom(this._store.select(TransactionsSelectors.getSelectedTransaction)),\r\n        switchMap(([{group}, transaction]) =>        \r\n            this._transactionService.assign(transaction!, group)\r\n            .pipe(\r\n                map(_ => TransactionActions.assignGroupSuccess()),\r\n                catchError((error) => of(TransactionActions.assignGroupFailure({error})))\r\n        ))\r\n    ));\r\n    \r\n    upload = createEffect(()=>this._actions$.pipe(\r\n        ofType(TransactionActions.upload),\r\n        switchMap(({file}) => \r\n            this._transactionService.uploadCSVFile(file)\r\n            .pipe(\r\n                map(_ => TransactionActions.uploadSuccess()),\r\n                catchError((error) => of(TransactionActions.uploadFailure({error})))\r\n        ))\r\n    ));\r\n}","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}